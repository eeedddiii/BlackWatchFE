import { useState, useEffect } from 'react';
import { useParams, Link } from 'react-router-dom';
import { toast } from 'react-hot-toast';
import { api } from '../../api/services';
import { VulnerabilityDataDocument } from '../../types';
import LoadingSpinner from '../../components/common/LoadingSpinner';

const VulnerabilityDataDetail = () => {
    const { id } = useParams<{ id: string }>();
    const [data, setData] = useState<VulnerabilityDataDocument | null>(null);
    const [loading, setLoading] = useState(true);

    useEffect(() => {
        if (id) {
            fetchData(id);
        }
    }, [id]);

    const fetchData = async (dataId: string) => {
        try {
            setLoading(true);
            const response = await api.data.getVulnerabilityDataDetail(dataId);
            setData(response);
        } catch (error: any) {
            toast.error('데이터를 불러오는데 실패했습니다.');
        } finally {
            setLoading(false);
        }
    };

    // CVSS 점수에 따른 색상
    const getCvssColor = (cvss: string | number) => {
        const score = typeof cvss === 'string' ? parseFloat(cvss) : cvss;
        if (score >= 9.0) return 'bg-red-100 text-red-800 border-red-200';
        if (score >= 7.0) return 'bg-orange-100 text-orange-800 border-orange-200';
        if (score >= 4.0) return 'bg-yellow-100 text-yellow-800 border-yellow-200';
        return 'bg-green-100 text-green-800 border-green-200';
    };

    // CVSS 점수에 따른 레벨
    const getCvssLevel = (cvss: string | number) => {
        const score = typeof cvss === 'string' ? parseFloat(cvss) : cvss;
        if (score >= 9.0) return 'Critical';
        if (score >= 7.0) return 'High';
        if (score >= 4.0) return 'Medium';
        return 'Low';
    };

    // CVE 링크 생성
    const getCveLink = (cveId: string) => {
        return `https://cve.mitre.org/cgi-bin/cvename.cgi?name=${cveId}`;
    };

    if (loading) {
        return (
            <div className="flex justify-center items-center h-64">
                <LoadingSpinner />
            </div>
        );
    }

    if (!data) {
        return (
            <div className="text-center py-12">
                <p className="text-gray-500">데이터를 찾을 수 없습니다.</p>
                <Link to="/data/vulnerability" className="text-blue-600 hover:text-blue-500">
                    목록으로 돌아가기
                </Link>
            </div>
        );
    }

    return (
        <div className="space-y-6">
            {/* 헤더 */}
            <div className="flex items-center justify-between">
                <h1 className="text-3xl font-bold text-gray-900">취약점 데이터 상세</h1>
                <Link
                    to="/data/vulnerability"
                    className="inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50"
                >
                    <svg className="mr-2 h-4 w-4" fill="none" stroke="currentColor">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M10 19l-7-7m0 0l7-7m-7 7h18" />
                    </svg>
                    목록으로
                </Link>
            </div>

            {/* 주요 정보 카드 */}
            <div className="bg-white shadow rounded-lg overflow-hidden">
                <div className="px-4 py-5 sm:p-6">
                    <div className="flex items-start justify-between">
                        <div className="flex-1">
                            <h2 className="text-xl font-semibold text-gray-900 mb-2">
                                {data.title}
                            </h2>
                            <div className="flex items-center space-x-4 text-sm text-gray-500">
                                <span>작성자: {data.author}</span>
                                <span>•</span>
                                <span>업로드: {new Date(data.uploadDate).toLocaleString()}</span>
                            </div>
                        </div>

                        {/* CVSS 점수 */}
                        {data.cvss && (
                            <div className={`px-4 py-2 rounded-lg border ${getCvssColor(data.cvss)}`}>
                                <div className="text-center">
                                    <div className="text-2xl font-bold">{parseFloat(data.cvss).toFixed(1)}</div>
                                    <div className="text-xs font-medium">{getCvssLevel(data.cvss)}</div>
                                    <div className="text-xs">CVSS</div>
                                </div>
                            </div>
                        )}
                    </div>
                </div>
            </div>

            {/* 상세 정보 */}
            <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
                {/* 기본 정보 */}
                <div className="lg:col-span-2 space-y-6">
                    <div className="bg-white shadow rounded-lg">
                        <div className="px-4 py-5 sm:p-6">
                            <h3 className="text-lg font-medium text-gray-900 mb-4">기본 정보</h3>
                            <dl className="grid grid-cols-1 gap-x-4 gap-y-6 sm:grid-cols-2">
                                <div>
                                    <dt className="text-sm font-medium text-gray-500">호스트</dt>
                                    <dd className="mt-1 text-sm text-gray-900">{data.host}</dd>
                                </div>
                                <div>
                                    <dt className="text-sm font-medium text-gray-500">경로</dt>
                                    <dd className="mt-1 text-sm text-gray-900">{data.path}</dd>
                                </div>
                                <div>
                                    <dt className="text-sm font-medium text-gray-500">업로드 날짜</dt>
                                    <dd className="mt-1 text-sm text-gray-900">
                                        {new Date(data.uploadDate).toLocaleString()}
                                    </dd>
                                </div>
                                <div>
                                    <dt className="text-sm font-medium text-gray-500">작성자</dt>
                                    <dd className="mt-1 text-sm text-gray-900">{data.author}</dd>
                                </div>
                            </dl>
                        </div>
                    </div>

                    {/* CVE 정보 */}
                    {data.cveIds && Array.isArray(data.cveIds) && data.cveIds.length > 0 && (
                        <div className="bg-white shadow rounded-lg">
                            <div className="px-4 py-5 sm:p-6">
                                <h3 className="text-lg font-medium text-gray-900 mb-4">CVE 정보</h3>
                                <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-3">
                                    {data.cveIds.map((cveId, index) => (
                                        <a
                                            key={index}
                                            href={getCveLink(cveId)}
                                            target="_blank"
                                            rel="noopener noreferrer"
                                            className="inline-flex items-center px-3 py-2 border border-gray-300 rounded-md text-sm bg-gray-50 hover:bg-gray-100 transition-colors"
                                        >
                                            <svg className="mr-2 h-4 w-4 text-gray-400" fill="none" stroke="currentColor">
                                                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
                                            </svg>
                                            {cveId}
                                        </a>
                                    ))}
                                </div>
                            </div>
                        </div>
                    )}

                    {/* 취약점 분류 */}
                    {data.vulnerabilityClass && Array.isArray(data.vulnerabilityClass) && data.vulnerabilityClass.length > 0 && (
                        <div className="bg-white shadow rounded-lg">
                            <div className="px-4 py-5 sm:p-6">
                                <h3 className="text-lg font-medium text-gray-900 mb-4">취약점 분류</h3>
                                <div className="flex flex-wrap gap-2">
                                    {data.vulnerabilityClass.map((vulnClass, index) => (
                                        <span
                                            key={index}
                                            className="inline-flex px-3 py-1 text-sm bg-blue-100 text-blue-800 rounded-full"
                                        >
                                            {vulnClass}
                                        </span>
                                    ))}
                                </div>
                            </div>
                        </div>
                    )}

                    {/* 영향받는 제품 */}
                    {data.products && Array.isArray(data.products) && data.products.length > 0 && (
                        <div className="bg-white shadow rounded-lg">
                            <div className="px-4 py-5 sm:p-6">
                                <h3 className="text-lg font-medium text-gray-900 mb-4">영향받는 제품</h3>
                                <div className="grid grid-cols-1 sm:grid-cols-2 gap-2">
                                    {data.products.map((product, index) => (
                                        <div key={index} className="p-2 bg-gray-50 rounded text-sm">
                                            {product}
                                        </div>
                                    ))}
                                </div>
                            </div>
                        </div>
                    )}

                    {/* 공격 기법 */}
                    {data.exploitationTechnique && Array.isArray(data.exploitationTechnique) && data.exploitationTechnique.length > 0 && (
                        <div className="bg-white shadow rounded-lg">
                            <div className="px-4 py-5 sm:p-6">
                                <h3 className="text-lg font-medium text-gray-900 mb-4">공격 기법</h3>
                                <div className="space-y-2">
                                    {data.exploitationTechnique.map((technique, index) => (
                                        <div key={index} className="flex items-center p-2 bg-red-50 rounded">
                                            <svg className="mr-2 h-4 w-4 text-red-500" fill="none" stroke="currentColor">
                                                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.082 16.5c-.77.833.192 2.5 1.732 2.5z" />
                                            </svg>
                                            <span className="text-sm text-red-800">{technique}</span>
                                        </div>
                                    ))}
                                </div>
                            </div>
                        </div>
                    )}
                </div>

                {/* 사이드바 */}
                <div className="space-y-6">
                    {/* 위험도 정보 */}
                    {data.cvss && (
                        <div className="bg-white shadow rounded-lg">
                            <div className="px-4 py-5 sm:p-6">
                                <h3 className="text-lg font-medium text-gray-900 mb-4">위험도 평가</h3>
                                <div className={`p-4 rounded-lg border ${getCvssColor(data.cvss)}`}>
                                    <div className="text-center mb-3">
                                        <div className="text-3xl font-bold">{parseFloat(data.cvss).toFixed(1)}</div>
                                        <div className="text-sm font-medium">{getCvssLevel(data.cvss)}</div>
                                        <div className="text-xs mt-1">CVSS v3.1 Base Score</div>
                                    </div>

                                    <div className="space-y-2 text-xs">
                                        <div className="flex justify-between">
                                            <span>위험도:</span>
                                            <span className="font-medium">{getCvssLevel(data.cvss)}</span>
                                        </div>
                                        <div className="w-full bg-gray-200 rounded-full h-2">
                                            <div
                                                className={`h-2 rounded-full ${
                                                    parseFloat(data.cvss) >= 9.0 ? 'bg-red-600' :
                                                        parseFloat(data.cvss) >= 7.0 ? 'bg-orange-500' :
                                                            parseFloat(data.cvss) >= 4.0 ? 'bg-yellow-500' : 'bg-green-500'
                                                }`}
                                                style={{ width: `${(parseFloat(data.cvss) / 10) * 100}%` }}
                                            ></div>
                                        </div>
                                    </div>
                                </div>

                                {/* CVSS 가이드 */}
                                <div className="mt-4 text-xs text-gray-500 space-y-1">
                                    <div className="flex justify-between">
                                        <span>Critical (9.0-10.0)</span>
                                        <span className="w-3 h-3 bg-red-600 rounded"></span>
                                    </div>
                                    <div className="flex justify-between">
                                        <span>High (7.0-8.9)</span>
                                        <span className="w-3 h-3 bg-orange-500 rounded"></span>
                                    </div>
                                    <div className="flex justify-between">
                                        <span>Medium (4.0-6.9)</span>
                                        <span className="w-3 h-3 bg-yellow-500 rounded"></span>
                                    </div>
                                    <div className="flex justify-between">
                                        <span>Low (0.1-3.9)</span>
                                        <span className="w-3 h-3 bg-green-500 rounded"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    )}

                    {/* 대응 권고사항 */}
                    <div className="bg-white shadow rounded-lg">
                        <div className="px-4 py-5 sm:p-6">
                            <h3 className="text-lg font-medium text-gray-900 mb-4">대응 권고사항</h3>
                            <div className="space-y-3 text-sm">
                                <div className="flex items-start">
                                    <svg className="mt-0.5 mr-2 h-4 w-4 text-blue-500 flex-shrink-0" fill="none" stroke="currentColor">
                                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                                    </svg>
                                    <span>시스템 및 소프트웨어를 최신 버전으로 업데이트</span>
                                </div>
                                <div className="flex items-start">
                                    <svg className="mt-0.5 mr-2 h-4 w-4 text-blue-500 flex-shrink-0" fill="none" stroke="currentColor">
                                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                                    </svg>
                                    <span>보안 패치 즉시 적용</span>
                                </div>
                                <div className="flex items-start">
                                    <svg className="mt-0.5 mr-2 h-4 w-4 text-blue-500 flex-shrink-0" fill="none" stroke="currentColor">
                                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                                    </svg>
                                    <span>네트워크 접근 제어 강화</span>
                                </div>
                                <div className="flex items-start">
                                    <svg className="mt-0.5 mr-2 h-4 w-4 text-blue-500 flex-shrink-0" fill="none" stroke="currentColor">
                                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                                    </svg>
                                    <span>로그 모니터링 및 이상 징후 탐지</span>
                                </div>
                            </div>
                        </div>
                    </div>

                    {/* 참고 자료 */}
                    {data.ref && Array.isArray(data.ref) && data.ref.length > 0 && (
                        <div className="bg-white shadow rounded-lg">
                            <div className="px-4 py-5 sm:p-6">
                                <h3 className="text-lg font-medium text-gray-900 mb-4">참고 자료</h3>
                                <div className="space-y-2">
                                    {data.ref.map((ref, index) => (
                                        <a
                                            key={index}
                                            href={ref}
                                            target="_blank"
                                            rel="noopener noreferrer"
                                            className="block p-2 text-sm text-blue-600 hover:text-blue-500 hover:bg-blue-50 rounded border border-gray-200"
                                        >
                                            <div className="flex items-center">
                                                <svg className="mr-2 h-4 w-4" fill="none" stroke="currentColor">
                                                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
                                                </svg>
                                                <span className="truncate">{ref}</span>
                                            </div>
                                        </a>
                                    ))}
                                </div>
                            </div>
                        </div>
                    )}
                </div>
            </div>

            {/* 상세 내용 */}
            {data.article && (
                <div className="bg-white shadow rounded-lg">
                    <div className="px-4 py-5 sm:p-6">
                        <h3 className="text-lg font-medium text-gray-900 mb-4">상세 내용</h3>
                        <div className="prose max-w-none">
                            <div className="text-sm text-gray-900 bg-gray-50 p-4 rounded-md whitespace-pre-wrap leading-relaxed">
                                {data.article}
                            </div>
                        </div>
                    </div>
                </div>
            )}

            {/* 메타데이터 */}
            <div className="bg-gray-50 border border-gray-200 rounded-lg p-6">
                <h3 className="text-lg font-medium text-gray-900 mb-4">메타데이터</h3>
                <dl className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 text-sm">
                    <div>
                        <dt className="font-medium text-gray-500">문서 ID</dt>
                        <dd className="mt-1 text-gray-900 font-mono">{data.id}</dd>
                    </div>
                    <div>
                        <dt className="font-medium text-gray-500">클라이언트 ID</dt>
                        <dd className="mt-1 text-gray-900 font-mono">{data.clientId}</dd>
                    </div>
                    <div>
                        <dt className="font-medium text-gray-500">생성일</dt>
                        <dd className="mt-1 text-gray-900">{new Date(data.createdAt).toLocaleString()}</dd>
                    </div>
                </dl>
            </div>

            {/* 관련 취약점 추천 (향후 구현 예정) */}
            <div className="bg-blue-50 border border-blue-200 rounded-lg p-6">
                <h3 className="text-lg font-medium text-blue-900 mb-2">관련 취약점</h3>
                <p className="text-sm text-blue-700">
                    이 취약점과 관련된 다른 보안 이슈들을 확인해보세요. (기능 개발 예정)
                </p>
            </div>
        </div>
    );
};

export default VulnerabilityDataDetail;